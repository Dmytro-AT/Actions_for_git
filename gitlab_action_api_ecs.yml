stages:
  - test
  - build
  - deploy
#############
# Build code
#############
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"credsStore\":\"ecr-login\",\"credHelpers\":{\"${AWS_ID}.dkr.ecr.region.amazonaws.com\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --cache-repo=$AWS_ECR --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $AWS_ECR:$CI_COMMIT_SHA
  only:
    - develop
    - master
##############
# Deploy code
##############
deploy:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  before_script:
    - apt-get update -y && apt-get install -y curl jq bc
    - |
      if [ $CI_COMMIT_BRANCH == "master" ]; then
        CI_AWS_ECS_CLUSTER=$PROD_CI_AWS_ECS_CLUSTER;
        CI_AWS_ECS_SERVICE=$PROD_CI_AWS_ECS_SERVICE;
        CI_AWS_ECS_TASK_DEFINITION=$PROD_CI_AWS_ECS_TASK_DEFINITION;
      fi
      if [ $CI_COMMIT_BRANCH == "develop" ]; then
        CI_AWS_ECS_CLUSTER=$DEV_CI_AWS_ECS_CLUSTER;
        CI_AWS_ECS_SERVICE=$DEV_CI_AWS_ECS_SERVICE;
        CI_AWS_ECS_TASK_DEFINITION=$DEV_CI_AWS_ECS_TASK_DEFINITION;
      fi
  script:
    - new_image_name=$AWS_ECR:$CI_COMMIT_SHA
    - current_task=$(aws ecs describe-task-definition --task-definition "$CI_AWS_ECS_TASK_DEFINITION")
    - task_memory=$(echo $current_task | jq '.taskDefinition.memory' | bc)
    - task_cpu=$(echo $current_task | jq '.taskDefinition.cpu' | bc)
    - current_container_definitions=$(echo $current_task | jq '.taskDefinition.containerDefinitions')
    - new_container_definitions=$(echo $current_container_definitions | jq --arg val $new_image_name '.[0].image = $val')
    - new_task_definition=$(aws ecs register-task-definition --requires-compatibilities "FARGATE" --execution-role-arn "ecsTaskExecutionRole" --network-mode "awsvpc" --cpu "$task_cpu" --container-definitions "$new_container_definitions" --family "$CI_AWS_ECS_TASK_DEFINITION" --memory "$task_memory")
    - new_task_revision=$(echo $new_task_definition | jq '.taskDefinition.revision')
    - aws ecs update-service --cluster "$CI_AWS_ECS_CLUSTER" --service "$CI_AWS_ECS_SERVICE" --task-definition "$CI_AWS_ECS_TASK_DEFINITION":"$new_task_revision"
  only:
    - develop
    - master
#################
# SonarQube check
#################
sonarqube-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - develop # or the name of your main branch